{
  "contractName": "Color",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/scar/nft-contract/src/contracts/Color.sol\":\"Color\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/scar/nft-contract/src/contracts/Color.sol\":{\"keccak256\":\"0x56eb9f7e283be2703c7645370727bd535e83bc64cb14050b1ca78c16fda8899f\",\"urls\":[\"bzz-raw://a82eb76e0c9a9f83219815f6e93371744e9b7f960f16c7a1c7f4ea36b9ea38df\",\"dweb:/ipfs/QmbK8eDwS5kqHE9jCagAtRvUxiFuwadBETDDAW3heQt6Eb\"]},\"/Users/scar/nft-contract/src/contracts/ERC721.sol\":{\"keccak256\":\"0xa36f1e7a595302130f59012128103c72c7799413cdde036ccc181fb687448d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14de71a231712607225be931a9cebe0c41a4c447a181af6578f5dfe6b525b054\",\"dweb:/ipfs/QmVQXEVbaq1fsPg1EFDtYUEVXvJXFbqBWasvDFveEq93sN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f436f6c6f720000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f434f4c4f52000000000000000000000000000000000000000000000000000000815250620000966301ffc9a760e01b6200011860201b60201c565b8160069080519060200190620000ae92919062000221565b508060079080519060200190620000c792919062000221565b50620000e06380ac58cd60e01b6200011860201b60201c565b620000f8635b5e139f60e01b6200011860201b60201c565b6200011063780e9d6360e01b6200011860201b60201c565b5050620002c7565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026457805160ff191683800117855562000295565b8280016001018555821562000295579182015b828111156200029457825182559160200191906001019062000277565b5b509050620002a49190620002a8565b5090565b5b80821115620002c3576000816000905550600101620002a9565b5090565b612d4180620002d76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde14610656578063bd11f69d1461075b578063c87b56dd14610802578063d85d3d27146108a9578063e985e9c51461096457610121565b80636352211e146104505780636c0360eb146104a857806370a082311461052b57806395d89b4114610583578063a22cb4651461060657610121565b806318160ddd116100f457806318160ddd146102b257806323b872dd146102d05780632f745c591461033e57806342842e0e146103a05780634f6ccce71461040e57610121565b806301ffc9a71461012657806306fdde0314610189578063081812fc1461020c578063095ea7b314610264575b600080fd5b6101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506109de565b60405180821515815260200191505060405180910390f35b610191610a45565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d15780820151818401526020810190506101b6565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102386004803603602081101561022257600080fd5b8101908080359060200190929190505050610ae7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b06004803603604081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b82565b005b6102ba610cc6565b6040518082815260200191505060405180910390f35b61033c600480360360608110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cd7565b005b61038a6004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4d565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b005b61043a6004803603602081101561042457600080fd5b8101908080359060200190929190505050610dc8565b6040518082815260200191505060405180910390f35b61047c6004803603602081101561046657600080fd5b8101908080359060200190929190505050610deb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610e22565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056d6004803603602081101561054157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec4565b6040518082815260200191505060405180910390f35b61058b610f99565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105cb5780820151818401526020810190506105b0565b50505050905090810190601f1680156105f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106546004803603604081101561061c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061103b565b005b6107596004803603608081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106d357600080fd5b8201836020820111156106e557600080fd5b8035906020019184600183028401116401000000008311171561070757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f1565b005b6107876004803603602081101561077157600080fd5b8101908080359060200190929190505050611269565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c75780820151818401526020810190506107ac565b50505050905090810190601f1680156107f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61082e6004803603602081101561081857600080fd5b8101908080359060200190929190505050611322565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561086e578082015181840152602081019050610853565b50505050905090810190601f16801561089b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610962600480360360208110156108bf57600080fd5b81019080803590602001906401000000008111156108dc57600080fd5b8201836020820111156108ee57600080fd5b8035906020019184600183028401116401000000008311171561091057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115f3565b005b6109c66004803603604081101561097a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174d565b60405180821515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610add5780601f10610ab257610100808354040283529160200191610add565b820191906000526020600020905b815481529060010190602001808311610ac057829003601f168201915b5050505050905090565b6000610af2826117e1565b610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c36602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b8d82610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cba6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610c336117fe565b73ffffffffffffffffffffffffffffffffffffffff161480610c625750610c6181610c5c6117fe565b61174d565b5b610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b896038913960400191505060405180910390fd5b610cc18383611806565b505050565b6000610cd260026118bf565b905090565b610ce8610ce26117fe565b826118d4565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cdb6031913960400191505060405180910390fd5b610d488383836119c8565b505050565b6000610da082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c0b90919063ffffffff16565b905092915050565b610dc3838383604051806020016040528060008152506111f1565b505050565b600080610ddf836002611c2590919063ffffffff16565b50905080915050919050565b6000610e1b82604051806060016040528060298152602001612beb602991396002611c519092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eba5780601f10610e8f57610100808354040283529160200191610eba565b820191906000526020600020905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612bc1602a913960400191505060405180910390fd5b610f92600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c70565b9050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110315780601f1061100657610100808354040283529160200191611031565b820191906000526020600020905b81548152906001019060200180831161101457829003601f168201915b5050505050905090565b6110436117fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006110f16117fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661119e6117fe565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6112026111fc6117fe565b836118d4565b611257576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cdb6031913960400191505060405180910390fd5b61126384848484611c85565b50505050565b600a818154811061127657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561131a5780601f106112ef5761010080835404028352916020019161131a565b820191906000526020600020905b8154815290600101906020018083116112fd57829003601f168201915b505050505081565b606061132d826117e1565b611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612c8b602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b50505050509050606061143c610e22565b90506000815114156114525781925050506115ee565b6000825111156115235780826040516020018083805190602001908083835b602083106114945780518252602082019150602081019050602083039250611471565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106114e557805182526020820191506020810190506020830392506114c2565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050506115ee565b8061152d85611cf7565b6040516020018083805190602001908083835b602083106115635780518252602082019150602081019050602083039250611540565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106115b45780518252602082019150602081019050602083039250611591565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050505b919050565b600b816040518082805190602001908083835b602083106116295780518252602082019150602081019050602083039250611606565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161561167457600080fd5b600a819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906116af929190612a21565b5060006001600a805490500390506116c73382611e3e565b6001600b836040518082805190602001908083835b602083106116ff57805182526020820191506020810190506020830392506116dc565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006117f782600261203290919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661187983610deb565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118cd8260000161204c565b9050919050565b60006118df826117e1565b611934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612b5d602c913960400191505060405180910390fd5b600061193f83610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119ae57508373ffffffffffffffffffffffffffffffffffffffff1661199684610ae7565b73ffffffffffffffffffffffffffffffffffffffff16145b806119bf57506119be818561174d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166119e882610deb565b73ffffffffffffffffffffffffffffffffffffffff1614611a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c626029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b136024913960400191505060405180910390fd5b611ae583838361205d565b611af0600082611806565b611b4181600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061206290919063ffffffff16565b50611b9381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061207c90919063ffffffff16565b50611baa818360026120969092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c1a83600001836120cb565b60001c905092915050565b600080600080611c38866000018661214e565b915091508160001c8160001c9350935050509250929050565b6000611c64846000018460001b846121e7565b60001c90509392505050565b6000611c7e826000016122dd565b9050919050565b611c908484846119c8565b611c9c848484846122ee565b611cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ae16032913960400191505060405180910390fd5b50505050565b60606000821415611d3f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611e39565b600082905060005b60008214611d69578080600101915050600a8281611d6157fe5b049150611d47565b60608167ffffffffffffffff81118015611d8257600080fd5b506040519080825280601f01601f191660200182016040528015611db55781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611e3157600a8481611dd657fe5b0660300160f81b82828060019003935081518110611df057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611e2957fe5b049350611dc4565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ee1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611eea816117e1565b15611f5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611f696000838361205d565b611fba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061207c90919063ffffffff16565b50611fd1818360026120969092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000612044836000018360001b612507565b905092915050565b600081600001805490509050919050565b505050565b6000612074836000018360001b61252a565b905092915050565b600061208e836000018360001b612612565b905092915050565b60006120c2846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612682565b90509392505050565b60008183600001805490501161212c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612abf6022913960400191505060405180910390fd5b82600001828154811061213b57fe5b9060005260206000200154905092915050565b600080828460000180549050116121b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c146022913960400191505060405180910390fd5b60008460000184815481106121c157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612273578082015181840152602081019050612258565b50505050905090810190601f1680156122a05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106122c157fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600061230f8473ffffffffffffffffffffffffffffffffffffffff1661275e565b61231c57600190506124ff565b606061248663150b7a0260e01b6123316117fe565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156123b557808201518184015260208101905061239a565b50505050905090810190601f1680156123e25780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001612ae1603291398773ffffffffffffffffffffffffffffffffffffffff166127719092919063ffffffff16565b9050600081806020019051602081101561249f57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612606576000600182039050600060018660000180549050039050600086600001828154811061257557fe5b906000526020600020015490508087600001848154811061259257fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806125ca57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061260c565b60009150505b92915050565b600061261e8383612789565b61267757826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061267c565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561272957846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612757565b8285600001600183038154811061273c57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b606061278084846000856127ac565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612807576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612b376026913960400191505060405180910390fd5b6128108561275e565b612882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106128d257805182526020820191506020810190506020830392506128af565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612934576040519150601f19603f3d011682016040523d82523d6000602084013e612939565b606091505b5091509150612949828286612955565b92505050949350505050565b6060831561296557829050612a1a565b6000835111156129785782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129df5780820151818401526020810190506129c4565b50505050905090810190601f168015612a0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a6257805160ff1916838001178555612a90565b82800160010185558215612a90579182015b82811115612a8f578251825591602001919060010190612a74565b5b509050612a9d9190612aa1565b5090565b5b80821115612aba576000816000905550600101612aa2565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220a8069a27429cd2a18174398bc80c12aafda7c5f2ea87cb7846908f580581360b64736f6c63430007000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063b88d4fde11610071578063b88d4fde14610656578063bd11f69d1461075b578063c87b56dd14610802578063d85d3d27146108a9578063e985e9c51461096457610121565b80636352211e146104505780636c0360eb146104a857806370a082311461052b57806395d89b4114610583578063a22cb4651461060657610121565b806318160ddd116100f457806318160ddd146102b257806323b872dd146102d05780632f745c591461033e57806342842e0e146103a05780634f6ccce71461040e57610121565b806301ffc9a71461012657806306fdde0314610189578063081812fc1461020c578063095ea7b314610264575b600080fd5b6101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506109de565b60405180821515815260200191505060405180910390f35b610191610a45565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d15780820151818401526020810190506101b6565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102386004803603602081101561022257600080fd5b8101908080359060200190929190505050610ae7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b06004803603604081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b82565b005b6102ba610cc6565b6040518082815260200191505060405180910390f35b61033c600480360360608110156102e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cd7565b005b61038a6004803603604081101561035457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d4d565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da8565b005b61043a6004803603602081101561042457600080fd5b8101908080359060200190929190505050610dc8565b6040518082815260200191505060405180910390f35b61047c6004803603602081101561046657600080fd5b8101908080359060200190929190505050610deb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610e22565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056d6004803603602081101561054157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec4565b6040518082815260200191505060405180910390f35b61058b610f99565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105cb5780820151818401526020810190506105b0565b50505050905090810190601f1680156105f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106546004803603604081101561061c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061103b565b005b6107596004803603608081101561066c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156106d357600080fd5b8201836020820111156106e557600080fd5b8035906020019184600183028401116401000000008311171561070757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f1565b005b6107876004803603602081101561077157600080fd5b8101908080359060200190929190505050611269565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c75780820151818401526020810190506107ac565b50505050905090810190601f1680156107f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61082e6004803603602081101561081857600080fd5b8101908080359060200190929190505050611322565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561086e578082015181840152602081019050610853565b50505050905090810190601f16801561089b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610962600480360360208110156108bf57600080fd5b81019080803590602001906401000000008111156108dc57600080fd5b8201836020820111156108ee57600080fd5b8035906020019184600183028401116401000000008311171561091057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115f3565b005b6109c66004803603604081101561097a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174d565b60405180821515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610add5780601f10610ab257610100808354040283529160200191610add565b820191906000526020600020905b815481529060010190602001808311610ac057829003601f168201915b5050505050905090565b6000610af2826117e1565b610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612c36602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b8d82610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612cba6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610c336117fe565b73ffffffffffffffffffffffffffffffffffffffff161480610c625750610c6181610c5c6117fe565b61174d565b5b610cb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612b896038913960400191505060405180910390fd5b610cc18383611806565b505050565b6000610cd260026118bf565b905090565b610ce8610ce26117fe565b826118d4565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cdb6031913960400191505060405180910390fd5b610d488383836119c8565b505050565b6000610da082600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c0b90919063ffffffff16565b905092915050565b610dc3838383604051806020016040528060008152506111f1565b505050565b600080610ddf836002611c2590919063ffffffff16565b50905080915050919050565b6000610e1b82604051806060016040528060298152602001612beb602991396002611c519092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eba5780601f10610e8f57610100808354040283529160200191610eba565b820191906000526020600020905b815481529060010190602001808311610e9d57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612bc1602a913960400191505060405180910390fd5b610f92600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c70565b9050919050565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110315780601f1061100657610100808354040283529160200191611031565b820191906000526020600020905b81548152906001019060200180831161101457829003601f168201915b5050505050905090565b6110436117fe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006110f16117fe565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661119e6117fe565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6112026111fc6117fe565b836118d4565b611257576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612cdb6031913960400191505060405180910390fd5b61126384848484611c85565b50505050565b600a818154811061127657fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561131a5780601f106112ef5761010080835404028352916020019161131a565b820191906000526020600020905b8154815290600101906020018083116112fd57829003601f168201915b505050505081565b606061132d826117e1565b611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612c8b602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b50505050509050606061143c610e22565b90506000815114156114525781925050506115ee565b6000825111156115235780826040516020018083805190602001908083835b602083106114945780518252602082019150602081019050602083039250611471565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106114e557805182526020820191506020810190506020830392506114c2565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050506115ee565b8061152d85611cf7565b6040516020018083805190602001908083835b602083106115635780518252602082019150602081019050602083039250611540565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106115b45780518252602082019150602081019050602083039250611591565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050505b919050565b600b816040518082805190602001908083835b602083106116295780518252602082019150602081019050602083039250611606565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161561167457600080fd5b600a819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906116af929190612a21565b5060006001600a805490500390506116c73382611e3e565b6001600b836040518082805190602001908083835b602083106116ff57805182526020820191506020810190506020830392506116dc565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006117f782600261203290919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661187983610deb565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118cd8260000161204c565b9050919050565b60006118df826117e1565b611934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612b5d602c913960400191505060405180910390fd5b600061193f83610deb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119ae57508373ffffffffffffffffffffffffffffffffffffffff1661199684610ae7565b73ffffffffffffffffffffffffffffffffffffffff16145b806119bf57506119be818561174d565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166119e882610deb565b73ffffffffffffffffffffffffffffffffffffffff1614611a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612c626029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b136024913960400191505060405180910390fd5b611ae583838361205d565b611af0600082611806565b611b4181600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061206290919063ffffffff16565b50611b9381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061207c90919063ffffffff16565b50611baa818360026120969092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c1a83600001836120cb565b60001c905092915050565b600080600080611c38866000018661214e565b915091508160001c8160001c9350935050509250929050565b6000611c64846000018460001b846121e7565b60001c90509392505050565b6000611c7e826000016122dd565b9050919050565b611c908484846119c8565b611c9c848484846122ee565b611cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ae16032913960400191505060405180910390fd5b50505050565b60606000821415611d3f576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611e39565b600082905060005b60008214611d69578080600101915050600a8281611d6157fe5b049150611d47565b60608167ffffffffffffffff81118015611d8257600080fd5b506040519080825280601f01601f191660200182016040528015611db55781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611e3157600a8481611dd657fe5b0660300160f81b82828060019003935081518110611df057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611e2957fe5b049350611dc4565b819450505050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ee1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611eea816117e1565b15611f5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b611f696000838361205d565b611fba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061207c90919063ffffffff16565b50611fd1818360026120969092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000612044836000018360001b612507565b905092915050565b600081600001805490509050919050565b505050565b6000612074836000018360001b61252a565b905092915050565b600061208e836000018360001b612612565b905092915050565b60006120c2846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612682565b90509392505050565b60008183600001805490501161212c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612abf6022913960400191505060405180910390fd5b82600001828154811061213b57fe5b9060005260206000200154905092915050565b600080828460000180549050116121b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612c146022913960400191505060405180910390fd5b60008460000184815481106121c157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612273578082015181840152602081019050612258565b50505050905090810190601f1680156122a05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106122c157fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b600061230f8473ffffffffffffffffffffffffffffffffffffffff1661275e565b61231c57600190506124ff565b606061248663150b7a0260e01b6123316117fe565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156123b557808201518184015260208101905061239a565b50505050905090810190601f1680156123e25780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001612ae1603291398773ffffffffffffffffffffffffffffffffffffffff166127719092919063ffffffff16565b9050600081806020019051602081101561249f57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612606576000600182039050600060018660000180549050039050600086600001828154811061257557fe5b906000526020600020015490508087600001848154811061259257fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806125ca57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061260c565b60009150505b92915050565b600061261e8383612789565b61267757826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061267c565b600090505b92915050565b600080846001016000858152602001908152602001600020549050600081141561272957846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612757565b8285600001600183038154811061273c57fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b606061278084846000856127ac565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612807576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612b376026913960400191505060405180910390fd5b6128108561275e565b612882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106128d257805182526020820191506020810190506020830392506128af565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612934576040519150601f19603f3d011682016040523d82523d6000602084013e612939565b606091505b5091509150612949828286612955565b92505050949350505050565b6060831561296557829050612a1a565b6000835111156129785782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156129df5780820151818401526020810190506129c4565b50505050905090810190601f168015612a0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612a6257805160ff1916838001178555612a90565b82800160010185558215612a90579182015b82811115612a8f578251825591602001919060010190612a74565b5b509050612a9d9190612aa1565b5090565b5b80821115612aba576000816000905550600101612aa2565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220a8069a27429cd2a18174398bc80c12aafda7c5f2ea87cb7846908f580581360b64736f6c63430007000033",
  "sourceMap": "57:695:0:-:0;;;300:53;;;;;;;;;;49123:369:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9727:40;9394:10;9746:20;;9727:18;;;:40;;:::i;:::-;49205:5;49197;:13;;;;;;;;;;;;:::i;:::-;;49230:7;49220;:17;;;;;;;;;;;;:::i;:::-;;49325:40;48288:10;49344:20;;49325:18;;;:40;;:::i;:::-;49375:49;48620:10;49394:29;;49375:18;;;:49;;:::i;:::-;49434:51;48993:10;49453:31;;49434:18;;;:51;;:::i;:::-;49123:369;;57:695:0;;10466:198:1;10564:10;10549:25;;:11;:25;;;;;10541:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10653:4;10617:20;:33;10638:11;10617:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;10466:198;:::o;57:695:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "57:695:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9924:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;50063:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52768:217;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;52312:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;51806:208;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53632:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;51575:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53998:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;52086:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;49826:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;51401:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49551:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50225:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53052:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;54213:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;89:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50393:776:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:384:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;53408:162:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9924:148;10009:4;10032:20;:33;10053:11;10032:33;;;;;;;;;;;;;;;;;;;;;;;;;;;10025:40;;9924:148;;;:::o;50063:98::-;50117:13;50149:5;50142:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50063:98;:::o;52768:217::-;52844:7;52871:16;52879:7;52871;:16::i;:::-;52863:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52954:15;:24;52970:7;52954:24;;;;;;;;;;;;;;;;;;;;;52947:31;;52768:217;;;:::o;52312:395::-;52392:13;52408:23;52423:7;52408:14;:23::i;:::-;52392:39;;52455:5;52449:11;;:2;:11;;;;52441:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52533:5;52517:21;;:12;:10;:12::i;:::-;:21;;;:69;;;;52542:44;52566:5;52573:12;:10;:12::i;:::-;52542:23;:44::i;:::-;52517:69;52509:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52679:21;52688:2;52692:7;52679:8;:21::i;:::-;52312:395;;;:::o;51806:208::-;51867:7;51986:21;:12;:19;:21::i;:::-;51979:28;;51806:208;:::o;53632:300::-;53791:41;53810:12;:10;:12::i;:::-;53824:7;53791:18;:41::i;:::-;53783:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53897:28;53907:4;53913:2;53917:7;53897:9;:28::i;:::-;53632:300;;;:::o;51575:160::-;51672:7;51698:30;51722:5;51698:13;:20;51712:5;51698:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;51691:37;;51575:160;;;;:::o;53998:149::-;54101:39;54118:4;54124:2;54128:7;54101:39;;;;;;;;;;;;:16;:39::i;:::-;53998:149;;;:::o;52086:169::-;52161:7;52181:15;52202:22;52218:5;52202:12;:15;;:22;;;;:::i;:::-;52180:44;;;52241:7;52234:14;;;52086:169;;;:::o;49826:175::-;49898:7;49924:70;49941:7;49924:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;49917:77;;49826:175;;;:::o;51401:95::-;51449:13;51481:8;51474:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51401:95;:::o;49551:218::-;49623:7;49667:1;49650:19;;:5;:19;;;;49642:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49733:29;:13;:20;49747:5;49733:20;;;;;;;;;;;;;;;:27;:29::i;:::-;49726:36;;49551:218;;;:::o;50225:102::-;50281:13;50313:7;50306:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50225:102;:::o;53052:290::-;53166:12;:10;:12::i;:::-;53154:24;;:8;:24;;;;53146:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53264:8;53219:18;:32;53238:12;:10;:12::i;:::-;53219:32;;;;;;;;;;;;;;;:42;53252:8;53219:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;53316:8;53287:48;;53302:12;:10;:12::i;:::-;53287:48;;;53326:8;53287:48;;;;;;;;;;;;;;;;;;;;53052:290;;:::o;54213:282::-;54344:41;54363:12;:10;:12::i;:::-;54377:7;54344:18;:41::i;:::-;54336:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54449:39;54463:4;54469:2;54473:7;54482:5;54449:13;:39::i;:::-;54213:282;;;;:::o;89:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;50393:776:1:-;50466:13;50499:16;50507:7;50499;:16::i;:::-;50491:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50578:23;50604:10;:19;50615:7;50604:19;;;;;;;;;;;50578:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50633:18;50654:9;:7;:9::i;:::-;50633:30;;50758:1;50742:4;50736:18;:23;50732:70;;;50782:9;50775:16;;;;;;50732:70;50930:1;50910:9;50904:23;:27;50900:106;;;50978:4;50984:9;50961:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50947:48;;;;;;50900:106;51136:4;51142:18;:7;:16;:18::i;:::-;51119:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51105:57;;;;50393:776;;;;:::o;359:384:0:-;465:12;478:6;465:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:21;456:30;;;;;;541:6;553;541:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;570:8;595:1;581:6;:13;;;;:15;570:26;;637:22;643:10;655:3;637:5;:22::i;:::-;732:4;709:12;722:6;709:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;359:384;;:::o;53408:162:1:-;53505:4;53528:18;:25;53547:5;53528:25;;;;;;;;;;;;;;;:35;53554:8;53528:35;;;;;;;;;;;;;;;;;;;;;;;;;53521:42;;53408:162;;;;:::o;55929:125::-;55994:4;56017:30;56039:7;56017:12;:21;;:30;;;;:::i;:::-;56010:37;;55929:125;;;:::o;650:104::-;703:15;737:10;730:17;;650:104;:::o;61771:189::-;61872:2;61845:15;:24;61861:7;61845:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;61927:7;61923:2;61889:46;;61898:23;61913:7;61898:14;:23::i;:::-;61889:46;;;;;;;;;;;;61771:189;;:::o;43014:121::-;43083:7;43109:19;43117:3;:10;;43109:7;:19::i;:::-;43102:26;;43014:121;;;:::o;56212:351::-;56305:4;56329:16;56337:7;56329;:16::i;:::-;56321:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56404:13;56420:23;56435:7;56420:14;:23::i;:::-;56404:39;;56472:5;56461:16;;:7;:16;;;:51;;;;56505:7;56481:31;;:20;56493:7;56481:11;:20::i;:::-;:31;;;56461:51;:94;;;;56516:39;56540:5;56547:7;56516:23;:39::i;:::-;56461:94;56453:103;;;56212:351;;;;:::o;59253:584::-;59377:4;59350:31;;:23;59365:7;59350:14;:23::i;:::-;:31;;;59342:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59477:1;59463:16;;:2;:16;;;;59455:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59531:39;59552:4;59558:2;59562:7;59531:20;:39::i;:::-;59632:29;59649:1;59653:7;59632:8;:29::i;:::-;59672:35;59699:7;59672:13;:19;59686:4;59672:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;59717:30;59739:7;59717:13;:17;59731:2;59717:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;59758:29;59775:7;59784:2;59758:12;:16;;:29;;;;;:::i;:::-;;59822:7;59818:2;59803:27;;59812:4;59803:27;;;;;;;;;;;;59253:584;;;:::o;35029:135::-;35100:7;35134:22;35138:3;:10;;35150:5;35134:3;:22::i;:::-;35126:31;;35119:38;;35029:135;;;;:::o;43463:233::-;43543:7;43552;43572:11;43585:13;43602:22;43606:3;:10;;43618:5;43602:3;:22::i;:::-;43571:53;;;;43650:3;43642:12;;43680:5;43672:14;;43634:55;;;;;;43463:233;;;;;:::o;44716:211::-;44823:7;44873:44;44878:3;:10;;44898:3;44890:12;;44904;44873:4;:44::i;:::-;44865:53;;44842:78;;44716:211;;;;;:::o;34585:112::-;34645:7;34671:19;34679:3;:10;;34671:7;:19::i;:::-;34664:26;;34585:112;;;:::o;55357:269::-;55470:28;55480:4;55486:2;55490:7;55470:9;:28::i;:::-;55516:48;55539:4;55545:2;55549:7;55558:5;55516:22;:48::i;:::-;55508:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55357:269;;;;:::o;45161:725::-;45217:13;45443:1;45434:5;:10;45430:51;;;45460:10;;;;;;;;;;;;;;;;;;;;;45430:51;45490:12;45505:5;45490:20;;45520:14;45544:75;45559:1;45551:4;:9;45544:75;;45576:8;;;;;;;45606:2;45598:10;;;;;;;;;45544:75;;;45628:19;45660:6;45650:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45628:39;;45677:13;45702:1;45693:6;:10;45677:26;;45720:5;45713:12;;45735:114;45750:1;45742:4;:9;45735:114;;45810:2;45803:4;:9;;;;;;45798:2;:14;45785:29;;45767:6;45774:7;;;;;;;45767:15;;;;;;;;;;;:47;;;;;;;;;;;45836:2;45828:10;;;;;;;;;45735:114;;;45872:6;45858:21;;;;;;45161:725;;;;:::o;57792:393::-;57885:1;57871:16;;:2;:16;;;;57863:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57943:16;57951:7;57943;:16::i;:::-;57942:17;57934:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58003:45;58032:1;58036:2;58040:7;58003:20;:45::i;:::-;58059:30;58081:7;58059:13;:17;58073:2;58059:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;58100:29;58117:7;58126:2;58100:12;:16;;:29;;;;;:::i;:::-;;58170:7;58166:2;58145:33;;58162:1;58145:33;;;;;;;;;;;;57792:393;;:::o;42782:149::-;42866:4;42889:35;42899:3;:10;;42919:3;42911:12;;42889:9;:35::i;:::-;42882:42;;42782:149;;;;:::o;39685:108::-;39741:7;39767:3;:12;;:19;;;;39760:26;;39685:108;;;:::o;62556:93::-;;;;:::o;34144:135::-;34214:4;34237:35;34245:3;:10;;34265:5;34257:14;;34237:7;:35::i;:::-;34230:42;;34144:135;;;;:::o;33847:129::-;33914:4;33937:32;33942:3;:10;;33962:5;33954:14;;33937:4;:32::i;:::-;33930:39;;33847:129;;;;:::o;42221:183::-;42310:4;42333:64;42338:3;:10;;42358:3;42350:12;;42388:5;42372:23;;42364:32;;42333:4;:64::i;:::-;42326:71;;42221:183;;;;;:::o;30231:201::-;30298:7;30346:5;30325:3;:11;;:18;;;;:26;30317:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30407:3;:11;;30419:5;30407:18;;;;;;;;;;;;;;;;30400:25;;30231:201;;;;:::o;40136:274::-;40203:7;40212;40261:5;40239:3;:12;;:19;;;;:27;40231:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40316:22;40341:3;:12;;40354:5;40341:19;;;;;;;;;;;;;;;;;;40316:44;;40378:5;:10;;;40390:5;:12;;;40370:33;;;;;40136:274;;;;;:::o;41597:315::-;41691:7;41710:16;41729:3;:12;;:17;41742:3;41729:17;;;;;;;;;;;;41710:36;;41776:1;41764:8;:13;;41779:12;41756:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41845:3;:12;;41869:1;41858:8;:12;41845:26;;;;;;;;;;;;;;;;;;:33;;;41838:40;;;41597:315;;;;;:::o;29792:107::-;29848:7;29874:3;:11;;:18;;;;29867:25;;29792:107;;;:::o;61070:589::-;61190:4;61215:15;:2;:13;;;:15::i;:::-;61210:58;;61253:4;61246:11;;;;61210:58;61277:23;61303:246;61355:45;;;61414:12;:10;:12::i;:::-;61440:4;61458:7;61479:5;61319:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61303:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;61277:272;;61559:13;61586:10;61575:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61559:48;;46624:10;61635:16;;61625:26;;;:6;:26;;;;61617:35;;;;61070:589;;;;;;;:::o;39472:123::-;39543:4;39587:1;39566:3;:12;;:17;39579:3;39566:17;;;;;;;;;;;;:22;;39559:29;;39472:123;;;;:::o;27991:1512::-;28057:4;28173:18;28194:3;:12;;:19;28207:5;28194:19;;;;;;;;;;;;28173:40;;28242:1;28228:10;:15;28224:1273;;28585:21;28622:1;28609:10;:14;28585:38;;28637:17;28678:1;28657:3;:11;;:18;;;;:22;28637:42;;28919:17;28939:3;:11;;28951:9;28939:22;;;;;;;;;;;;;;;;28919:42;;29082:9;29053:3;:11;;29065:13;29053:26;;;;;;;;;;;;;;;:38;;;;29199:1;29183:13;:17;29157:3;:12;;:23;29170:9;29157:23;;;;;;;;;;;:43;;;;29306:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;29398:3;:12;;:19;29411:5;29398:19;;;;;;;;;;;29391:26;;;29439:4;29432:11;;;;;;;;28224:1273;29481:5;29474:12;;;27991:1512;;;;;:::o;27419:404::-;27482:4;27503:21;27513:3;27518:5;27503:9;:21::i;:::-;27498:319;;27540:3;:11;;27557:5;27540:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27720:3;:11;;:18;;;;27698:3;:12;;:19;27711:5;27698:19;;;;;;;;;;;:40;;;;27759:4;27752:11;;;;27498:319;27801:5;27794:12;;27419:404;;;;;:::o;37030:678::-;37106:4;37220:16;37239:3;:12;;:17;37252:3;37239:17;;;;;;;;;;;;37220:36;;37283:1;37271:8;:13;37267:435;;;37337:3;:12;;37355:38;;;;;;;;37372:3;37355:38;;;;37385:5;37355:38;;;37337:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37549:3;:12;;:19;;;;37529:3;:12;;:17;37542:3;37529:17;;;;;;;;;;;:39;;;;37589:4;37582:11;;;;;37267:435;37660:5;37624:3;:12;;37648:1;37637:8;:12;37624:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;37686:5;37679:12;;;37030:678;;;;;;:::o;18659:413::-;18719:4;18922:12;19031:7;19019:20;19011:28;;19064:1;19057:4;:8;19050:15;;;18659:413;;;:::o;21514:193::-;21617:12;21648:52;21670:6;21678:4;21684:1;21687:12;21648:21;:52::i;:::-;21641:59;;21514:193;;;;;:::o;29584:127::-;29657:4;29703:1;29680:3;:12;;:19;29693:5;29680:19;;;;;;;;;;;;:24;;29673:31;;29584:127;;;;:::o;22541:523::-;22668:12;22725:5;22700:21;:30;;22692:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22791:18;22802:6;22791:10;:18::i;:::-;22783:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22914:12;22928:23;22955:6;:11;;22975:5;22983:4;22955:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22913:75;;;;23005:52;23023:7;23032:10;23044:12;23005:17;:52::i;:::-;22998:59;;;;22541:523;;;;;;:::o;25024:725::-;25139:12;25167:7;25163:580;;;25197:10;25190:17;;;;25163:580;25328:1;25308:10;:17;:21;25304:429;;;25566:10;25560:17;25626:15;25613:10;25609:2;25605:19;25598:44;25515:145;25705:12;25698:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25024:725;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.6.0 <0.8.0;\n\nimport \"./ERC721.sol\";\n\ncontract Color is ERC721 {\n\n    string[] public colors; //array storing all the deployed colors\n    mapping(string => bool) _colorExists; // another mapping array for knowing if the color is taken or not\n\n\n    // constructor(name, symbol)\n    constructor() ERC721(\"Color\", \"COLOR\") public {\n    }\n\n    function mint(string memory _color) public {\n\n        // require UNIQUE Color (non fung)\n        require(!_colorExists[_color]);\n\n        // passed in color -> add and track\n        colors.push(_color);\n        uint _id = colors.length-1;\n\n        // call mint function\n        _mint(msg.sender, _id);\n\n        // Color - track its existence\n        _colorExists[_color] = true;\n    }\n\n\n\n\n\n\n\n}",
  "sourcePath": "/Users/scar/nft-contract/src/contracts/Color.sol",
  "ast": {
    "absolutePath": "/Users/scar/nft-contract/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        58
      ]
    },
    "id": 59,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/Users/scar/nft-contract/src/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 59,
        "sourceUnit": 3050,
        "src": "33:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3049,
              "src": "75:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$3049",
                "typeString": "contract ERC721"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:6:0"
          }
        ],
        "contractDependencies": [
          81,
          92,
          206,
          231,
          260,
          332,
          3049
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 58,
        "linearizedBaseContracts": [
          58,
          3049,
          260,
          231,
          206,
          332,
          92,
          81
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bd11f69d",
            "id": 7,
            "mutability": "mutable",
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 58,
            "src": "89:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "89:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "89:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 58,
            "src": "157:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "165:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "157:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "175:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "346:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "321:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "330:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3049,
                  "src": "314:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$3049_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "314:24:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:0:0"
            },
            "scope": 58,
            "src": "300:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "402:341:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "464:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "465:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "478:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "465:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "456:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "456:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "553:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "541:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "541:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "541:19:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 56,
                      "src": "570:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "570:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "581:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "595:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "581:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "570:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "643:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "643:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "655:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2781,
                      "src": "637:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "637:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "709:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "722:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "709:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "732:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "709:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "709:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "373:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:0"
            },
            "scope": 58,
            "src": "359:384:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 59,
        "src": "57:695:0"
      }
    ],
    "src": "0:752:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/scar/nft-contract/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        58
      ]
    },
    "id": 59,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/Users/scar/nft-contract/src/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 59,
        "sourceUnit": 3050,
        "src": "33:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3049,
              "src": "75:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$3049",
                "typeString": "contract ERC721"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:6:0"
          }
        ],
        "contractDependencies": [
          81,
          92,
          206,
          231,
          260,
          332,
          3049
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 58,
        "linearizedBaseContracts": [
          58,
          3049,
          260,
          231,
          206,
          332,
          92,
          81
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bd11f69d",
            "id": 7,
            "mutability": "mutable",
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 58,
            "src": "89:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "89:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "89:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 58,
            "src": "157:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "165:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "157:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "175:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "346:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "321:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "330:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3049,
                  "src": "314:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$3049_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "314:24:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:0:0"
            },
            "scope": 58,
            "src": "300:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "402:341:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "464:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "465:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "478:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "465:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "456:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "456:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "553:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "541:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "541:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "541:19:0"
                },
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 56,
                      "src": "570:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "570:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 43,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "581:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "595:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "581:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "570:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "643:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "643:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "655:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2781,
                      "src": "637:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "637:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "709:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "722:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "709:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "732:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "709:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "709:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 57,
                  "src": "373:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:0"
            },
            "scope": 58,
            "src": "359:384:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 59,
        "src": "57:695:0"
      }
    ],
    "src": "0:752:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x035387e1E3F389B3c27e93E89c8B2849A008C124",
      "transactionHash": "0x22c12e079bf5f9cc021a214ed0bf77b16a26bd8ee4e8e26e9f909a6078043c0f"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2021-04-24T07:14:53.991Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}